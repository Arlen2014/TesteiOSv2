//
//  StatementViewController.swift
//  TesteiOSv2_ArlenPereira
//
//  Created by Arlen Ricardo Pereira on 28/01/20.
//  Copyright (c) 2020 Arlen Ricardo Pereira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementDisplayLogic: class
{
  func displayStatements(viewModel: StatementsModel.UserInfoModel.ViewModel)
}

class StatementViewController: UIViewController, StatementDisplayLogic
{
  var interactor: StatementBusinessLogic?
  var router: (NSObjectProtocol & StatementRoutingLogic & StatementDataPassing)?
    
    var tableViewCellId = "statementCell"

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = StatementInteractor()
    let presenter = StatementsPresenter()
    let router = StatementRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    fetchUserInfo()
    
    let nib = UINib.init(nibName: "StatementTableViewCell", bundle: nil)
    self.tableViewFrame.register(nib, forCellReuseIdentifier: tableViewCellId)
    self.tableViewFrame.rowHeight = 100
  }
  
  // MARK: Interface
    @IBOutlet weak var tableViewFrame: UITableView!
    @IBOutlet weak var userNameLabel: UILabel!
    @IBOutlet weak var bankAccountLabel: UILabel!
    @IBOutlet weak var balanceLabel: UILabel!
    
  // MARK: Function
    
  func fetchUserInfo()
  {
    let request = StatementsModel.UserInfoModel.Request()
    interactor?.requestUserInfo(request: request)
  }
  
  func displayStatements(viewModel: StatementsModel.UserInfoModel.ViewModel)
  {
    print(viewModel)
    
    userNameLabel.text = viewModel.name!
    bankAccountLabel.text = "\(viewModel.bankAccount!) / \(viewModel.agency!)"
    balanceLabel.text = "R$ \(String(format:"%.2f", viewModel.balance!))"
  }
    
    // MARK: Button
    @IBAction func backButton(_ sender: UIButton) {
        self.dismiss(animated: true, completion: nil)
    }
}

extension StatementViewController: UITableViewDataSource, UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 10
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableViewFrame.dequeueReusableCell(withIdentifier: tableViewCellId, for: indexPath) as! StatementTableViewViewCell
        cell.titleLabel.text = "Pagamento"
        cell.dateLabel.text = "10/01/2020"
        cell.descriptionLabel.text = "Conta de Luz"
        cell.valueLabel.text = "R$ 1.000,00"

        return cell
    }
}
